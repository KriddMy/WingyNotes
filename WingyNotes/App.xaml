<Application x:Class="WingyNotes.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:WingyNotes"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             StartupUri="Windows/MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources\WindowNonClient.xaml" />
                <ResourceDictionary Source="Controls\Redactor\InterfaceResources.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>




    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    








<!--<SolidColorBrush x:Key="WindowTitleBarInactiveText" Color="BlueViolet"/>
        <SolidColorBrush x:Key="WindowTextBrush" Color="Black" />
        <SolidColorBrush x:Key="MouseOverOverlayBackgroundBrush" Color="Black" />
        <SolidColorBrush x:Key="PressedOverlayBackgroundBrush" Color="Black" />
        <SolidColorBrush x:Key="MouseOverWindowCloseButtonBackgroundBrush" Color="Black" />
        <SolidColorBrush x:Key="MouseOverWindowCloseButtonForegroundBrush" Color="Black" />
        <SolidColorBrush x:Key="PressedWindowCloseButtonBackgroundBrush" Color="Black" />
        <SolidColorBrush x:Key="WindowBorderBrush" Color="Black" />
        <Style x:Key="TitleBarButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="{DynamicResource WindowTextBrush}" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
					    x:Name="border"
					    Background="Transparent"
					    BorderThickness="0"
					    SnapsToDevicePixels="true">
                            <ContentPresenter
						    x:Name="contentPresenter"
						    Margin="0"
						    HorizontalAlignment="Center"
						    VerticalAlignment="Center"
						    Focusable="False"
						    RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource MouseOverOverlayBackgroundBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource PressedOverlayBackgroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TitleBarCloseButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
					    x:Name="border"
					    Background="Transparent"
					    BorderThickness="0"
					    SnapsToDevicePixels="true">
                            <ContentPresenter
						    x:Name="contentPresenter"
						    Margin="0"
						    HorizontalAlignment="Center"
						    VerticalAlignment="Center"
						    Focusable="False"
						    RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource MouseOverWindowCloseButtonBackgroundBrush}" />
                                <Setter Property="Foreground" Value="{DynamicResource MouseOverWindowCloseButtonForegroundBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource PressedWindowCloseButtonBackgroundBrush}" />
                                <Setter Property="Foreground" Value="{DynamicResource MouseOverWindowCloseButtonForegroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="WindowMainPanelStyle" TargetType="{x:Type Border}">
            <Setter Property="BorderBrush" Value="{DynamicResource WindowBorderBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
                    <Setter Property="BorderThickness" Value="0" />
                </DataTrigger>
            </Style.Triggers>
        </Style>-->